##!/usr/bin/with-contenv bash
#
## make folders
#mkdir -p /openvpn{/cert,/server,/client,/certs} /dev/net
#
## create tun device
#if [ ! -c /dev/net/tun ]; then
#  mknod /dev/net/tun c 10 200
#fi
#
#shopt -s extglob
#
#new_client () {
#	# Generates the custom client.ovpn
#	{
#  cat /etc/openvpn/server/client-common.txt
#	echo "<ca>"
#	cat /etc/openvpn/server/easy-rsa/pki/ca.crt
#	echo "</ca>"
#	echo "<cert>"
#	sed -ne '/BEGIN CERTIFICATE/,$ p' /etc/openvpn/server/easy-rsa/pki/issued/client.crt
#	echo "</cert>"
#	echo "<key>"
#	cat /etc/openvpn/server/easy-rsa/pki/private/client.key
#	echo "</key>"
#	echo "<tls-crypt>"
#	sed -ne '/BEGIN OpenVPN Static key/,$ p' /etc/openvpn/server/tc.key
#	echo "</tls-crypt>"
#	} > /openvpn/client/client.conf
#}
#
#
#if [[ ! -e /etc/openvpn/server/config.conf ]]; then
#  cp -f /etc/openvpn/ /openvpn/
#fi
#
#apt-get update && \
#apt-get install -y openvpn
#
#if [[ ! -e /etc/openvpn/server/config.conf ]]; then
#  clear
#  echo /dev/null > /openvpn/server/config.conf
#  echo "dev tun
#ca ca.crt
#cert server.crt
#key server.key
#dh dh.pem
#auth SHA512
#tls-crypt tc.key
#topology subnet
#server 10.8.0.0 255.255.255.0
#push \"redirect-gateway def1 bypass-dhcp\"
#ifconfig-pool-persist ipp.txt
#push \"dhcp-option DNS 1.1.1.1\"
#push \"dhcp-option DNS 1.0.0.1\"
#keepalive 10 120
#cipher AES-256-CBC
#user abc
#group abc
#persist-key
#persist-tun
#status openvpn-status.log
#verb 3
#crl-verify crl.pem" > /openvpn/server/config.conf
#
#if [[ "$proto" = "udp" ]]; then
#		echo "explicit-exit-notify" >> /etc/openvpn/server/config.conf
#fi
#
#  cp -f /openvpn/server/config.conf /etc/openvpn/server/config.conf
#fi
#
## permissions
#chown abc:abc /etc/openvpn/server/ /openvpn/server/ /openvpn/client/
#chmod -R 755 /etc/openvpn/server/
#
#
#mv ~/EasyRSA-3.0.7/ /etc/openvpn/server/ && \
# mv /etc/openvpn/server/EasyRSA-3.0.7/ /etc/openvpn/server/easy-rsa/ && \
# rm -f ~/easyrsa.tgz && \
# chmod -R 755 /etc/openvpn/server/easy-rsa/
#
##check credentials
#if [[ ! -e /etc/openvpn/server/ca.crt ]]; then
#  cd /etc/openvpn/server/easy-rsa/
#  # Create the PKI, set up the CA and the server and client certificates
#	./easyrsa init-pki
#	./easyrsa --batch build-ca nopass
#	EASYRSA_CERT_EXPIRE=3650 ./easyrsa build-server-full server nopass
#	EASYRSA_CERT_EXPIRE=3650 ./easyrsa build-client-full client nopass
#	EASYRSA_CRL_DAYS=3650 ./easyrsa gen-crl
#
#	# Move the stuff we need
#	cp pki/ca.crt pki/private/ca.key pki/issued/server.crt pki/private/server.key pki/crl.pem /etc/openvpn/server
#	# CRL is read with each client connection, when OpenVPN is dropped to abc
#	chown abc:abc /etc/openvpn/server/crl.pem
#	# Generate key for tls-crypt
#	/usr/sbin/openvpn --genkey --secret /etc/openvpn/server/tc.key
#
#	#generate DH PARAMETER
#	/usr/bin/openssl dhparam -out /etc/openvpn/server/dh.pem 2048
#fi
#
#
#if [[ ! -e /etc/openvpn/client/client.conf ]]; then
#  touch /openvpn/client/client.conf
#  get_public_ip=$(grep -m 1 -oE '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$' <<< "$(wget -T 10 -t 1 -4qO- "http://ip1.dynupdate.no-ip.com/" || curl -m 10 -4Ls "http://ip1.dynupdate.no-ip.com/")")
#  echo "client
#dev tun
#proto $proto
#remote $get_public_ip $port
#resolv-retry infinite
#nobind
#persist-key
#persist-tun
#remote-cert-tls server
#auth SHA512
#cipher AES-256-CBC
#ignore-unknown-option block-outside-dns
#block-outside-dns
#verb 3" > /etc/openvpn/server/client-common.txt
#
#  new_client
#
#	rm -f /etc/openvpn/client/client.conf
#	cp /openvpn/client/client.conf /etc/openvpn/client/client.conf
#fi
